// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "02/07/2017 15:27:18"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    Lab4
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Lab4_vlg_sample_tst(
	s0,
	s1,
	s2,
	w0,
	w1,
	w2,
	w3,
	w4,
	w5,
	w6,
	w7,
	sampler_tx
);
input  s0;
input  s1;
input  s2;
input  w0;
input  w1;
input  w2;
input  w3;
input  w4;
input  w5;
input  w6;
input  w7;
output sampler_tx;

reg sample;
time current_time;
always @(s0 or s1 or s2 or w0 or w1 or w2 or w3 or w4 or w5 or w6 or w7)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
	if ($realtime == 0 || $realtime != current_time)  
	begin									          
		if (sample === 1'bx)                          
			sample = 0;                               
		else                                          
			sample = ~sample;                         
	end										          
	current_time = $realtime;					      
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module Lab4_vlg_check_tst (
	out,
	sampler_rx
);
input  out;
input sampler_rx;

reg  out_expected;

reg  out_prev;

reg  out_expected_prev;

reg  last_out_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:1] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 1'b1;
end

// update real /o prevs

always @(trigger)
begin
	out_prev = out;
end

// update expected /o prevs

always @(trigger)
begin
	out_expected_prev = out_expected;
end



// expected out
initial
begin
	out_expected = 1'bX;
end 
// generate trigger
always @(out_expected or out)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected out = %b | ",out_expected_prev);
	$display("| real out = %b | ",out_prev);
`endif
	if (
		( out_expected_prev !== 1'bx ) && ( out_prev !== out_expected_prev )
		&& ((out_expected_prev !== last_out_exp) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port out :: @time = %t",  $realtime);
		$display ("     Expected value = %b", out_expected_prev);
		$display ("     Real value = %b", out_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_out_exp = out_expected_prev;
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module Lab4_vlg_vec_tst();
// constants                                           
// general purpose registers
reg s0;
reg s1;
reg s2;
reg w0;
reg w1;
reg w2;
reg w3;
reg w4;
reg w5;
reg w6;
reg w7;
// wires                                               
wire out;

wire sampler;                             

// assign statements (if any)                          
Lab4 i1 (
// port map - connection between master ports and signals/registers   
	.out(out),
	.s0(s0),
	.s1(s1),
	.s2(s2),
	.w0(w0),
	.w1(w1),
	.w2(w2),
	.w3(w3),
	.w4(w4),
	.w5(w5),
	.w6(w6),
	.w7(w7)
);

// s0
initial
begin
	s0 = 1'b0;
	s0 = #420000 1'b1;
	s0 = #560000 1'b0;
end 

// s1
initial
begin
	s1 = 1'b0;
	s1 = #180000 1'b1;
	s1 = #240000 1'b0;
	s1 = #260000 1'b1;
	s1 = #300000 1'b0;
end 

// s2
initial
begin
	s2 = 1'b0;
	s2 = #80000 1'b1;
	s2 = #100000 1'b0;
	s2 = #100000 1'b1;
	s2 = #140000 1'b0;
	s2 = #140000 1'b1;
	s2 = #120000 1'b0;
	s2 = #180000 1'b1;
	s2 = #120000 1'b0;
end 

// w0
initial
begin
	w0 = 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #3000 1'b0;
	w0 = #3000 1'b1;
	w0 = #3000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #3000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #3000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #6000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #4000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #8000 1'b0;
	w0 = #4000 1'b1;
	w0 = #1000 1'b0;
	w0 = #6000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #6000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #3000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #4000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #5000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #7000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #6000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #4000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #4000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #5000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #4000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #1000 1'b1;
	w0 = #6000 1'b0;
	w0 = #5000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #4000 1'b1;
	w0 = #3000 1'b0;
	w0 = #3000 1'b1;
	w0 = #3000 1'b0;
	w0 = #3000 1'b1;
	w0 = #2000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #4000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #4000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #6000 1'b1;
	w0 = #3000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #3000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #7000 1'b0;
	w0 = #3000 1'b1;
	w0 = #3000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #4000 1'b0;
	w0 = #4000 1'b1;
	w0 = #1000 1'b0;
	w0 = #6000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #4000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #6000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #3000 1'b0;
	w0 = #2000 1'b1;
	w0 = #4000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #5000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #4000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #6000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #4000 1'b1;
	w0 = #4000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #5000 1'b1;
	w0 = #2000 1'b0;
	w0 = #4000 1'b1;
	w0 = #2000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #4000 1'b1;
	w0 = #2000 1'b0;
	w0 = #4000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #4000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #7000 1'b1;
	w0 = #1000 1'b0;
	w0 = #8000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #3000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #4000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #7000 1'b1;
	w0 = #1000 1'b0;
	w0 = #4000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #4000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #3000 1'b0;
	w0 = #2000 1'b1;
	w0 = #4000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #8000 1'b0;
	w0 = #1000 1'b1;
	w0 = #7000 1'b0;
	w0 = #2000 1'b1;
	w0 = #6000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #2000 1'b1;
	w0 = #4000 1'b0;
	w0 = #1000 1'b1;
	w0 = #5000 1'b0;
	w0 = #3000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #4000 1'b0;
	w0 = #4000 1'b1;
	w0 = #2000 1'b0;
	w0 = #4000 1'b1;
	w0 = #2000 1'b0;
	w0 = #3000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #2000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #3000 1'b1;
	w0 = #2000 1'b0;
	w0 = #6000 1'b1;
	w0 = #2000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
	w0 = #3000 1'b0;
	w0 = #1000 1'b1;
	w0 = #1000 1'b0;
	w0 = #4000 1'b1;
	w0 = #4000 1'b0;
	w0 = #3000 1'b1;
	w0 = #1000 1'b0;
	w0 = #1000 1'b1;
end 

// w1
initial
begin
	w1 = 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #6000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #6000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #6000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #10000 1'b0;
	w1 = #2000 1'b1;
	w1 = #6000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #8000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #8000 1'b1;
	w1 = #4000 1'b0;
	w1 = #6000 1'b1;
	w1 = #4000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #8000 1'b1;
	w1 = #8000 1'b0;
	w1 = #6000 1'b1;
	w1 = #10000 1'b0;
	w1 = #6000 1'b1;
	w1 = #8000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #12000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #6000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #6000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #4000 1'b1;
	w1 = #10000 1'b0;
	w1 = #2000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #6000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #12000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #6000 1'b0;
	w1 = #20000 1'b1;
	w1 = #16000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #10000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #8000 1'b0;
	w1 = #4000 1'b1;
	w1 = #8000 1'b0;
	w1 = #4000 1'b1;
	w1 = #14000 1'b0;
	w1 = #2000 1'b1;
	w1 = #8000 1'b0;
	w1 = #8000 1'b1;
	w1 = #6000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #6000 1'b0;
	w1 = #2000 1'b1;
	w1 = #4000 1'b0;
	w1 = #4000 1'b1;
	w1 = #8000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #8000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #10000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #8000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #4000 1'b0;
	w1 = #4000 1'b1;
	w1 = #6000 1'b0;
	w1 = #8000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #14000 1'b0;
	w1 = #4000 1'b1;
	w1 = #8000 1'b0;
	w1 = #4000 1'b1;
	w1 = #10000 1'b0;
	w1 = #2000 1'b1;
	w1 = #12000 1'b0;
	w1 = #4000 1'b1;
	w1 = #6000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #6000 1'b1;
	w1 = #12000 1'b0;
	w1 = #2000 1'b1;
	w1 = #4000 1'b0;
	w1 = #4000 1'b1;
	w1 = #4000 1'b0;
	w1 = #6000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #6000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #6000 1'b1;
	w1 = #6000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #6000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #6000 1'b0;
	w1 = #6000 1'b1;
	w1 = #6000 1'b0;
	w1 = #6000 1'b1;
	w1 = #2000 1'b0;
	w1 = #6000 1'b1;
	w1 = #4000 1'b0;
	w1 = #6000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #6000 1'b0;
	w1 = #4000 1'b1;
	w1 = #18000 1'b0;
	w1 = #6000 1'b1;
	w1 = #2000 1'b0;
	w1 = #4000 1'b1;
	w1 = #6000 1'b0;
	w1 = #2000 1'b1;
	w1 = #8000 1'b0;
	w1 = #4000 1'b1;
	w1 = #2000 1'b0;
	w1 = #8000 1'b1;
	w1 = #6000 1'b0;
	w1 = #10000 1'b1;
	w1 = #8000 1'b0;
	w1 = #2000 1'b1;
	w1 = #4000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #2000 1'b1;
	w1 = #2000 1'b0;
	w1 = #6000 1'b1;
end 

// w2
initial
begin
	w2 = 1'b0;
	w2 = #18000 1'b1;
	w2 = #12000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #9000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #12000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #12000 1'b0;
	w2 = #3000 1'b1;
	w2 = #12000 1'b0;
	w2 = #24000 1'b1;
	w2 = #3000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #9000 1'b0;
	w2 = #12000 1'b1;
	w2 = #3000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #12000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #18000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #15000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #6000 1'b1;
	w2 = #12000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #9000 1'b0;
	w2 = #3000 1'b1;
	w2 = #12000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #9000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #15000 1'b1;
	w2 = #9000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #6000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #9000 1'b0;
	w2 = #9000 1'b1;
	w2 = #6000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #15000 1'b1;
	w2 = #3000 1'b0;
	w2 = #12000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #15000 1'b0;
	w2 = #12000 1'b1;
	w2 = #9000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #9000 1'b1;
	w2 = #12000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #6000 1'b0;
	w2 = #6000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #6000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #6000 1'b1;
	w2 = #6000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #30000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
	w2 = #9000 1'b1;
	w2 = #3000 1'b0;
	w2 = #3000 1'b1;
	w2 = #3000 1'b0;
end 

// w3
initial
begin
	w3 = 1'b1;
	w3 = #24000 1'b0;
	w3 = #8000 1'b1;
	w3 = #24000 1'b0;
	w3 = #16000 1'b1;
	w3 = #8000 1'b0;
	w3 = #32000 1'b1;
	w3 = #8000 1'b0;
	w3 = #8000 1'b1;
	w3 = #16000 1'b0;
	w3 = #24000 1'b1;
	w3 = #32000 1'b0;
	w3 = #16000 1'b1;
	w3 = #8000 1'b0;
	w3 = #40000 1'b1;
	w3 = #16000 1'b0;
	w3 = #8000 1'b1;
	w3 = #8000 1'b0;
	w3 = #8000 1'b1;
	w3 = #8000 1'b0;
	w3 = #16000 1'b1;
	w3 = #8000 1'b0;
	w3 = #24000 1'b1;
	w3 = #8000 1'b0;
	w3 = #8000 1'b1;
	w3 = #8000 1'b0;
	w3 = #8000 1'b1;
	w3 = #40000 1'b0;
	w3 = #24000 1'b1;
	w3 = #24000 1'b0;
	w3 = #8000 1'b1;
	w3 = #8000 1'b0;
	w3 = #16000 1'b1;
	w3 = #16000 1'b0;
	w3 = #16000 1'b1;
	w3 = #40000 1'b0;
	w3 = #8000 1'b1;
	w3 = #32000 1'b0;
	w3 = #16000 1'b1;
	w3 = #8000 1'b0;
	w3 = #8000 1'b1;
	w3 = #32000 1'b0;
	w3 = #8000 1'b1;
	w3 = #8000 1'b0;
	w3 = #8000 1'b1;
	w3 = #16000 1'b0;
	w3 = #40000 1'b1;
	w3 = #8000 1'b0;
	w3 = #8000 1'b1;
	w3 = #48000 1'b0;
	w3 = #8000 1'b1;
	w3 = #16000 1'b0;
	w3 = #24000 1'b1;
	w3 = #8000 1'b0;
	w3 = #16000 1'b1;
	w3 = #24000 1'b0;
	w3 = #24000 1'b1;
	w3 = #16000 1'b0;
	w3 = #16000 1'b1;
	w3 = #8000 1'b0;
end 

// w4
initial
begin
	w4 = 1'b1;
	w4 = #40000 1'b0;
	w4 = #20000 1'b1;
	w4 = #100000 1'b0;
	w4 = #20000 1'b1;
	w4 = #40000 1'b0;
	w4 = #20000 1'b1;
	w4 = #20000 1'b0;
	w4 = #20000 1'b1;
	w4 = #60000 1'b0;
	w4 = #20000 1'b1;
	w4 = #100000 1'b0;
	w4 = #40000 1'b1;
	w4 = #20000 1'b0;
	w4 = #20000 1'b1;
	w4 = #60000 1'b0;
	w4 = #20000 1'b1;
	w4 = #20000 1'b0;
	w4 = #140000 1'b1;
	w4 = #20000 1'b0;
	w4 = #40000 1'b1;
	w4 = #20000 1'b0;
	w4 = #20000 1'b1;
	w4 = #40000 1'b0;
end 

// w5
initial
begin
	w5 = 1'b1;
	w5 = #35000 1'b0;
	w5 = #105000 1'b1;
	w5 = #105000 1'b0;
	w5 = #35000 1'b1;
	w5 = #35000 1'b0;
	w5 = #70000 1'b1;
	w5 = #35000 1'b0;
	w5 = #35000 1'b1;
	w5 = #105000 1'b0;
	w5 = #70000 1'b1;
	w5 = #70000 1'b0;
	w5 = #35000 1'b1;
	w5 = #35000 1'b0;
	w5 = #35000 1'b1;
	w5 = #35000 1'b0;
	w5 = #35000 1'b1;
	w5 = #35000 1'b0;
end 

// w6
initial
begin
	w6 = 1'b1;
end 

// w7
initial
begin
	w7 = 1'b0;
end 

Lab4_vlg_sample_tst tb_sample (
	.s0(s0),
	.s1(s1),
	.s2(s2),
	.w0(w0),
	.w1(w1),
	.w2(w2),
	.w3(w3),
	.w4(w4),
	.w5(w5),
	.w6(w6),
	.w7(w7),
	.sampler_tx(sampler)
);

Lab4_vlg_check_tst tb_out(
	.out(out),
	.sampler_rx(sampler)
);
endmodule

